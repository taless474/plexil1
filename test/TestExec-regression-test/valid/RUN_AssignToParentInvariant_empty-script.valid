[PlexilExec:addPlan]Added plan: 
AssignToParentInvariant{
 State: INACTIVE (0)
  Child{
   State: INACTIVE (0)
  }
}

[PlexilExec:notifyNodeConditionChanged] for node AssignToParentInvariant 0x7fa70d404a60
[PlexilExec:cycle] ==>Start cycle 1
[PlexilExec:step][1:0] Check queue: AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:handleConditionsChanged] Considering node AssignToParentInvariant 0x7fa70d404a60 for state transition.
[PlexilExec:addStateChangeNode] Placing node AssignToParentInvariant 0x7fa70d404a60 on the state change queue in position 1
[PlexilExec:step][1:0] State change queue: AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:step][1:0:0] Transitioning node AssignToParentInvariant 0x7fa70d404a60 from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentInvariant 0x7fa70d404a60
[PlexilExec:step][1:1] Check queue: AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:handleConditionsChanged] Considering node AssignToParentInvariant 0x7fa70d404a60 for state transition.
[PlexilExec:addStateChangeNode] Placing node AssignToParentInvariant 0x7fa70d404a60 on the state change queue in position 2
[PlexilExec:step][1:1] State change queue: AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:step][1:1:0] Transitioning node AssignToParentInvariant 0x7fa70d404a60 from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentInvariant 0x7fa70d404a60
[PlexilExec:notifyNodeConditionChanged] for node Child 0x7fa70d404d90
[PlexilExec:handleNeedsExecution] Storing action for node AssignToParentInvariant 0x7fa70d404a60 of type NodeList to be executed.
[PlexilExec:step][1:2] Check queue: AssignToParentInvariant 0x7fa70d404a60 Child 0x7fa70d404d90 
[PlexilExec:handleConditionsChanged] Considering node Child 0x7fa70d404d90 for state transition.
[PlexilExec:addStateChangeNode] Placing node Child 0x7fa70d404d90 on the state change queue in position 3
[PlexilExec:step][1:2] State change queue: Child 0x7fa70d404d90 
[PlexilExec:step][1:2:0] Transitioning node Child 0x7fa70d404d90 from INACTIVE to WAITING
[PlexilExec:notifyNodeConditionChanged] for node Child 0x7fa70d404d90
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentInvariant 0x7fa70d404a60
[PlexilExec:step][1:3] Check queue: Child 0x7fa70d404d90 AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:handleConditionsChanged] Considering node Child 0x7fa70d404d90 for state transition.
[PlexilExec:handleConditionsChanged] Node Child 0x7fa70d404d90 is an assignment node that could be executing. Adding it to the resource contention list
[PlexilExec:addToResourceContention]Adding node Child 0x7fa70d404d90 to resource contention.
[PlexilExec:ensureConflictSet] created new conflict set for (Variable Boolean step_failed 0x7fa70d404d08 [a](0))
[PlexilExec:resolveResourceConflicts] 1 Assignment node(s) with best priority for variable step_failed
[PlexilExec:resolveResourceConflicts] Node Child 0x7fa70d404d90 has best priority.
[PlexilExec:addStateChangeNode] Placing node Child 0x7fa70d404d90 on the state change queue in position 4
[PlexilExec:step][1:3] State change queue: Child 0x7fa70d404d90 
[PlexilExec:step][1:3:0] Transitioning node Child 0x7fa70d404d90 from WAITING to EXECUTING
[PlexilExec:notifyNodeConditionChanged] for node Child 0x7fa70d404d90
[PlexilExec:handleNeedsExecution] Storing action for node Child 0x7fa70d404d90 of type Assignment to be executed.
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentInvariant 0x7fa70d404a60
[PlexilExec:performAssignments] performing 1 assignments and 0 retractions
[Test:testOutput]Assigning (Variable Boolean step_failed 0x7fa70d404d08 [a](0)) to 1
[PlexilExec:cycle] ==>End cycle 1
[PlexilExec:printPlan]
AssignToParentInvariant{
 State: EXECUTING (0)
 InvariantCondition: (EQ Boolean 0x7fa70d4050d0 [a](0) (Variable Boolean step_failed 0x7fa70d404d08 [a](1)) (Constant Boolean 0x102abe090 [a](0)))
 EndCondition: (EQ Boolean 0x7fa70d405130 [a](0) (StateVariable NodeState Child 0x7fa70d404e58 [a](EXECUTING)) (NodeStateValue NodeState 0x102abe180 [a](FINISHED)))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean AssignToParentInvariant0x7fa70d404ba0 [i](0))
 step_failed: (Variable Boolean step_failed 0x7fa70d404d08 [a](1))
  Child{
   State: EXECUTING (0)
   AncestorInvariantCondition: (EQ Boolean 0x7fa70d4050d0 [a](0) (Variable Boolean step_failed 0x7fa70d404d08 [a](1)) (Constant Boolean 0x102abe090 [a](0)))
   AncestorEndCondition: (EQ Boolean 0x7fa70d405130 [a](0) (StateVariable NodeState Child 0x7fa70d404e58 [a](EXECUTING)) (NodeStateValue NodeState 0x102abe180 [a](FINISHED)))
   ActionCompleteCondition: (InternalVariable Boolean ack 0x7fa70d404f50 [a](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fa70d404f90 [i](0))
   AssignmentConflictCondition: (Variable Boolean Child AssignmentConflictCondition 0x7fa70d405038 [i](UNKNOWN))
  }
}

[PlexilExec:cycle] ==>Start cycle 2
[PlexilExec:step][2:0] Check queue: Child 0x7fa70d404d90 AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:handleConditionsChanged] Considering node Child 0x7fa70d404d90 for state transition.
[PlexilExec:handleConditionsChanged] Node Child 0x7fa70d404d90 is an assignment node that is failing, and is already in the resource contention list
[PlexilExec:addStateChangeNode] Placing node Child 0x7fa70d404d90 on the state change queue in position 5
[PlexilExec:handleConditionsChanged] Considering node AssignToParentInvariant 0x7fa70d404a60 for state transition.
[PlexilExec:addStateChangeNode] Placing node AssignToParentInvariant 0x7fa70d404a60 on the state change queue in position 6
[PlexilExec:resolveResourceConflicts] Ignoring Assignments for variable step_failed, which has a retraction pending
[PlexilExec:step][2:0] State change queue: Child 0x7fa70d404d90 AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:step][2:0:0] Transitioning node Child 0x7fa70d404d90 from EXECUTING to FAILING
[PlexilExec:notifyNodeConditionChanged] for node Child 0x7fa70d404d90
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentInvariant 0x7fa70d404a60
[PlexilExec:step][2:0:1] Transitioning node AssignToParentInvariant 0x7fa70d404a60 from EXECUTING to FAILING
[PlexilExec:performAssignments] performing 0 assignments and 1 retractions
[Test:testOutput]Restoring previous value of (Variable Boolean step_failed 0x7fa70d404d08 [a](1))
[PlexilExec:cycle] ==>End cycle 2
[PlexilExec:printPlan]
AssignToParentInvariant{
 State: FAILING (0)
 InvariantCondition: (EQ Boolean 0x7fa70d4050d0 [a](1) (Variable Boolean step_failed 0x7fa70d404d08 [a](0)) (Constant Boolean 0x102abe090 [a](0)))
 EndCondition: (EQ Boolean 0x7fa70d405130 [a](0) (StateVariable NodeState Child 0x7fa70d404e58 [a](FAILING)) (NodeStateValue NodeState 0x102abe180 [a](FINISHED)))
 ActionCompleteCondition: (AllChildrenWaitingOrFinished Boolean AssignToParentInvariant0x7fa70d404ba0 [a](0))
 step_failed: (Variable Boolean step_failed 0x7fa70d404d08 [a](0))
  Child{
   State: FAILING (0)
   AncestorInvariantCondition: (EQ Boolean 0x7fa70d4050d0 [a](1) (Variable Boolean step_failed 0x7fa70d404d08 [a](0)) (Constant Boolean 0x102abe090 [a](0)))
   AncestorEndCondition: (EQ Boolean 0x7fa70d405130 [a](0) (StateVariable NodeState Child 0x7fa70d404e58 [a](FAILING)) (NodeStateValue NodeState 0x102abe180 [a](FINISHED)))
   ActionCompleteCondition: (InternalVariable Boolean ack 0x7fa70d404f50 [i](1))
   AbortCompleteCondition: (InternalVariable Boolean abortComplete 0x7fa70d404f90 [a](1))
   AssignmentConflictCondition: (Variable Boolean Child AssignmentConflictCondition 0x7fa70d405038 [i](UNKNOWN))
  }
}

[PlexilExec:cycle] ==>Start cycle 3
[PlexilExec:step][3:0] Check queue: Child 0x7fa70d404d90 AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:handleConditionsChanged] Considering node Child 0x7fa70d404d90 for state transition.
[PlexilExec:handleConditionsChanged] Node Child 0x7fa70d404d90 is an assignment node that is no longer possibly executing. Removing it from resource contention.
[PlexilExec:removeFromResourceContention] removing node Child 0x7fa70d404d90 from contention for variable (Variable Boolean step_failed 0x7fa70d404d08 [a](0))
[PlexilExec:removeFromResourceContention] node Child 0x7fa70d404d90 was only node assigning (Variable Boolean step_failed 0x7fa70d404d08 [a](0)), removing variable from contention
[PlexilExec:addStateChangeNode] Placing node Child 0x7fa70d404d90 on the state change queue in position 7
[PlexilExec:step][3:0] State change queue: Child 0x7fa70d404d90 
[PlexilExec:step][3:0:0] Transitioning node Child 0x7fa70d404d90 from FAILING to FINISHED
[PlexilExec:notifyNodeConditionChanged] for node Child 0x7fa70d404d90
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentInvariant 0x7fa70d404a60
[PlexilExec:step][3:1] Check queue: Child 0x7fa70d404d90 AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:handleConditionsChanged] Considering node AssignToParentInvariant 0x7fa70d404a60 for state transition.
[PlexilExec:addStateChangeNode] Placing node AssignToParentInvariant 0x7fa70d404a60 on the state change queue in position 8
[PlexilExec:step][3:1] State change queue: AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:step][3:1:0] Transitioning node AssignToParentInvariant 0x7fa70d404a60 from FAILING to ITERATION_ENDED
[PlexilExec:notifyNodeConditionChanged] for node AssignToParentInvariant 0x7fa70d404a60
[PlexilExec:step][3:2] Check queue: AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:handleConditionsChanged] Considering node AssignToParentInvariant 0x7fa70d404a60 for state transition.
[PlexilExec:addStateChangeNode] Placing node AssignToParentInvariant 0x7fa70d404a60 on the state change queue in position 9
[PlexilExec:step][3:2] State change queue: AssignToParentInvariant 0x7fa70d404a60 
[PlexilExec:step][3:2:0] Transitioning node AssignToParentInvariant 0x7fa70d404a60 from ITERATION_ENDED to FINISHED
[PlexilExec:performAssignments] performing 0 assignments and 0 retractions
[PlexilExec:cycle] ==>End cycle 3
[PlexilExec:printPlan]
AssignToParentInvariant{
 State: FINISHED (0)
 Outcome: FAILURE
 Failure type: INVARIANT_CONDITION_FAILED
 step_failed: (Variable Boolean step_failed 0x7fa70d404d08 [i](UNKNOWN))
  Child{
   State: FINISHED (0)
   Outcome: FAILURE
   Failure type: PARENT_FAILED
  }
}

